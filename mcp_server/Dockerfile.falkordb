# syntax=docker/dockerfile:1.9
# Multi-stage build for FalkorDB-optimized Graphiti MCP Server
# Target: <500MB total deployment size

# Build stage
FROM python:3.12-slim AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install uv
ADD https://astral.sh/uv/install.sh /uv-installer.sh
RUN sh /uv-installer.sh && rm /uv-installer.sh
ENV PATH="/root/.local/bin:${PATH}"

# Configure uv for optimal build
ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_PYTHON_DOWNLOADS=never

# Copy the graphiti-core source code and build wheel
COPY graphiti_core/ /build/graphiti-core/graphiti_core/
COPY pyproject.toml README.md LICENSE /build/graphiti-core/
WORKDIR /build/graphiti-core
RUN uv build --wheel

# Build MCP server dependencies
WORKDIR /build/mcp
COPY mcp_server/pyproject.toml ./

# Remove editable dependency and install from wheel
RUN sed -i 's/graphiti-core = { path = "[^"]*", editable = true }//' pyproject.toml && \
    uv venv /build/venv && \
    uv pip install --python /build/venv/bin/python /build/graphiti-core/dist/*.whl && \
    uv pip install --python /build/venv/bin/python -e .

# Runtime stage - optimized for FalkorDB
FROM python:3.12-slim AS runtime

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r app && useradd -r -d /app -g app app

WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /build/venv /app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Copy application code
COPY mcp_server/graphiti_mcp_server.py ./

# FalkorDB-specific environment variables
ENV GRAPHITI_DB_TYPE=falkordb \
    FALKORDB_URL=redis://falkordb:6379 \
    GRAPHITI_DB_NAME=graphiti_db \
    MCP_SERVER_HOST=0.0.0.0 \
    PYTHONUNBUFFERED=1 \
    SEMAPHORE_LIMIT=20

# Change ownership to app user
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/status || exit 1

# Expose port
EXPOSE 8000

# Default command for FalkorDB deployment
CMD ["python", "graphiti_mcp_server.py", "--transport", "sse"]